Written by Kevin Lynx 5.26.2010

对于左值中的数组访问和数组创建存在二义性：
Var: Var '[' Exp ']' 
ArrayExp: ID '[' Exp ']' OF Exp

如下的产生式yacc会任务有冲突：
Exp: Exp Op Exp
Op: PLUS
但是改为以下则没冲突：
Exp: Exp PLUS Exp

对于产生式也会存在冲突，情况同else二义性：
FunctionDecl: FuncDeclList
FuncDeclList: FuncDeclList FuncDecl 
	| FuncDecl
FuncDecl: FUNCTION ID LPAREN FieldList RPAREN EQ Exp 
在遇到FUNCTION时，yacc可能会reduce到新的FunctionDecl，或者shift进入FuncDecl，
解决方法就是通过建立优先级：
%nonassoc FuncPrec
%nonassoc FUNCTION
FunctionDecl: FuncDeclList %prec FuncPrec

在OR/AND中同样存在类似问题。



Program: Exp
	;

Exp: Var
	| INT
	| STRING
	| CallExp
	| OpExp
	| RecordExp
	| SeqExp
	| AssignExp
	| IfExp
	| WhileExp
	| ForExp
	| LetExp
	| ArrayExp
	| NilExp
	| BreakExp
	;

Var: ID
	| Var DOT ID
	| Var LBRACK Exp RBRACK
	;

CallExp: ID LPAREN ArgList RPAREN
	;

ArgList: ArgList COMMA Exp
	| Exp 
	| Null
	;

Null: ;

OpExp: Exp Op Exp
	;

Op: PLUS
	| MINUS
	| TIMES
	| DIVIDE
	| EQ
	| NEQ
	| LT
	| LE
	| GT
	| GE
	| AND
	| OR
	;

RecordExp: ID LBRACE EFieldList RBRACE
	;

EFieldList: EFieldList COMMA EField
	| EField 
	| Null
	;

EField: ID EQ Exp
	;

SeqExp: LPAREN ExpList RPAREN
	| ExpList
	;

ExpList: ExpList SEMICOLON Exp
	| Exp 
	;

AssignExp: Var ASSIGN Exp
	;

IfExp: IF Exp THEN Exp
	| IF Exp THEN Exp ELSE Exp
	;

WhileExp: WHILE Exp DO Exp
	;

ForExp: FOR ID ASSIGN Exp TO Exp DO Exp
	;

ArrayExp: ID LBRACK Exp RBRACK OF Exp
	;

NilExp: NIL
	;

BreakExp: BREAK
	;

LetExp: LET DeclList IN Exp END
	;

DeclList: DeclList Decl
	| Null
	;

Decl: TypeDecl
	| VarDecl
	| FuncDecl
	;

TypeDecl: TYPE ID EQ Ty
	;

Ty: ID
	| LBRACE FieldList RBRACE
	| ARRAY OF ID
	;

FieldList: FieldList COMMA ID COLON ID
	| ID COLON ID
	| Null
	;

VarDecl: VAR ID ASSIGN Exp
	| VAR ID COLON ID ASSIGN Exp
	;

FuncDecl: FUNCTION ID LPAREN FieldList RPAREN EQ Exp
	| FUNCTION ID LPAREN FieldList RPAREN COLON ID EQ Exp
	;

