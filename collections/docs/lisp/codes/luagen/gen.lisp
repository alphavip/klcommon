#|
    gen.lisp
    generate lua codes by parser, only support simple definitions currently.
    Kevin Lynx
    3.6.2011

|#

(defun classname (cls) 
    (token-str (nth 1 cls)))

(defun funcname (func)
    (token-str (nth 1 func)))

(defun arg-count (func)
    (nth 2 func))

;; generate: "arg1, arg2" etc
(defun gen-arg-list (arg-n)
    (if (= arg-n 0)
        ""
        (let ((ret ""))
            (do ((i 1 (+ i 1)))
                 ((>= i arg-n)
                     (concat-string ret (format nil "arg~a" i)))
                (setf ret (concat-string ret (format nil "arg~a, " i)))))))

(defun gen-function (func &optional (name (funcname func)))
    (format nil "function ~a (~a)~%end~%~%" name 
        (gen-arg-list (arg-count func))))     

(defun method-name (cls-name func)
    (format nil "~a:~a" cls-name (funcname func)))

(defun gen-method (cls-name func)
    (gen-function func (method-name cls-name func)))

(defun gen-method-list (cls-name func-list)
    (if (null func-list)
        ""
        (let ((func (car func-list))) 
            (concat-string (gen-function func (method-name cls-name func))
                (gen-method-list cls-name (cdr func-list))))))

(defun gen-class (cls)
    (concat-string (format nil "~a = {}~%~%" (classname cls))
        (gen-method-list (classname cls) (nth 2 cls))))

(defun gen-class-list (classlst)
    (if (null classlst)
        ""
        (concat-string (gen-class (car classlst))
            (gen-class-list (cdr classlst)))))

(defun gen-file-header ()
    (format nil "--This file is automatically generated by lispcode-gen.~%~%"))

