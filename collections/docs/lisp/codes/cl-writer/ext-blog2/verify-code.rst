为ext-blog增加简单验证码
--------------------------

使用ext-blog搭建本站后不久，就开始出现垃圾评论，而且越来越多。有段时间我每天上去都会发现500左右的垃圾评论，而且清一色来自国外。所以我需要一个垃圾评论的过滤功能。

开始我打算找一个评论的自动过滤器，但一google，发现Lisp的世界里居然没有类似的应用。唯一的spam filter还是<Pratical Common Lisp>一书里的。但后来一想，如果要自动过滤，后台就得加个“回收站“之类的功能，以避免误判时可以恢复。这样算下来工作量不小。所以最终，还是整个验证码功能最简单。

然后又是搜索，悲剧地发现Lisp的世界里居然没有现成的验证码生成库。琢磨下来，还是只有自己写。验证码生成基本还是很简单。随机生成几个字母，绘制到一张图片上即可。要在前端显示，把图片内容发送给浏览器就可以。当然，需要事先将验证码结果保存到对应的session上。session在hunchentoot里访问起来也很方便。

这里需要一个图形处理库。我不希望这个库太大，因为ext-blog依赖的库（包括间接依赖的）已经很多了。依赖库多在开源方面不是问题，但在我的128M内存的vps上则也许会有问题。

最初折腾的库是ch-image，之前提到的nuclblog作者写的。Lisp很多库使用都很简单，接口很简洁，这大概是因为Lisp程序员都不算菜的缘故。但这个库很悲剧的是，我如果要使用freetype字体，则需要使用另一个库，然后，就一直依赖。如果这些依赖库都被quicklisp收录了，那倒简单。但事实并不是这样，这些库基本全是nuclblog作者自己写的（造轮子狂）。

然后我选择了image这个什么文档都没有（连作者名字都没有）的库。虽然没有文档，但代码很少，这个库完全是在操作点阵信息。它自己内部实现了一个“图片“存储结构，通过接口修改后，可以使用一些导出函数导出为不同格式，例如gif。字体方面，自带的字体就是用数组定义的点阵信息，导出来的图片上字体非常小。不过，这个库居然支持pcf字体。使用wenquanyi字体试了下，还能用，就是对小写字母和一些符号绘制的位置不对，不知道这是BUG还是字体文件导致。总而言之，能用，别嫌丑。

然后我就基于image这个库写了一个验证码生成库kl-verify。这个库就一个接口：generate-verify-code。集成到ext-blog中后，效果过得去，先不管机器自动识别什么的。更新到vps上后，垃圾评论果然没了。

不久后，又出现垃圾评论，一两条左右，说不准是人工发的。后来经同事建议，还不如把验证码改成生成算术表达式。当时kl-verify生成的图片偶尔人都很难辨别（生成算法太简单了），如果生成表达式，就可以直接黑白颜色绘制。然后就有了现在博客的这个验证码效果。

kl-verify可以从我的Git项目上获取，这个是主要源码： 

https://github.com/kevinlynx/klprj/blob/master/ext-blog/deps/kl-verify/verify-code.lisp

