.. -*- coding: utf-8 -*-

cl-writer specification
=======================

:Author: Kevin Lynx
:Date: 3.11.2011

Structure
---------

When writing blogs, place some files below:

    * post_context.rst
    * post_context.html (generated by rst2html.py)
    * images/
    * images/img1.jpg
    * images/img2.jpg

First, you run rst2html.py to generate html file by your rst file.

Second, run cl-writer to parse html file and upload these referenced image files first,
then replace all these image reference by absloute URLs.

And last, cl-writer will post html file as your new blog article.

Upload images
-------------

cl-writer will build a path on server with :cl-writer/posted_time/file.

BUG FIX PROCESS
---------------

When called rpc-call in a xml process, the xml-call will always return nil. I
traced some codes in xml-rpc.lisp (s-xml-rpc), and i found the problem occurs
from the xml library s-xml. 

I suppose that's because i parse a xml in another xml parse process. But i write
a small test, and the result is not like what i supposed.

I trace more, and i found in decode-xml-rpc-finish-element function, the name
type is different in different call environment. When the call success, the name
is a type of keyword, otherwise it's symbol type. Symbol type canot be compared
to ``:|struct|``, so these codes does not executed actually.

But why this happens? It seems i should trace this problem in s-xml library.

There're 2 places called finish-element-hook in s-xml:
    * xml.lisp 580
    * xml.lisp 610

And open-tag is the variable passed to finish-element-hook which:

    (setf open-tag (resolve-identifier open-tag *namespaces*)

It seems the variable is related to *namespaces*, i traced this variable before
parse xml and in the parse processing, i found this global variable value is
different!

And in fundtion resolve-identifier, it seems there's an easy way to solve this:

  (if *ignore-namespaces*
      (intern identifier :keyword)

So, in my cl-writer, just set *ignore-namespaces* to true. The strange problem
which cost my several hours has been solved.

Dependences
------------

Only need s-xml-rpc library. (of cource this library depends on many other
 libraries.)

Fix a bug (?) there:

xml-rpc.lisp (line 191)::

      (cond ((or (null arg) (eq arg t))
             (princ "<boolean>" stream)
             (princ (if arg 1 0) stream)
             (princ "</boolean>" stream))
            ((or (stringp arg) (symbolp arg))

TODO
----

* add config(DONE)
* add new post categories (DONE)
* modify post, modify a post is some difficult because of:
    1. retrieve the post
    2. retrieve text from html
* FIX bug when there are more than one image files with the same name
* filter html body only
* fix absloute image path handle bug
* save an image url table, so that we can edit a post

HISTORY
---------

3.17.2011

The strange thing is, when i post a simple test blog to cppblog.com, the whole
html file except these title headers removed, the css exists. But the css style
has been removed in my real post something talked about Lisp.

Whatever, i decide to post only <body> texts to cppblog.com.

To remove other texts except these in <body> tag has another good behavior: the
page will look more nice on the other places such as cppblog main page.

XML file in a literal text does not work yet. Any '<' string in a plain text
will be handled as an html tag.

And this problem probaly because of xml parser, handle these special character:

    &lt;?xml version='1.0'?&gt;
=>
    <?xml version='1.0'?>

s-xml will translate these special characters when parsing a string:
    
    xml.lisp 412 parse-string

And the solution is, when parse an xml string in cl-writer, it will translate it
back to these special characters.

Actually, s-xml already provide this function: s-xml:print-string-xml.

