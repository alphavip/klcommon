
6.21.2010
1、C2S的网络延迟：导致服务器对每一步的验证失败，失败后会重置客户端坐标
2、S2C的网络延迟：导致客户端重置坐标，与服务器坐标相同
3、尽可能少的S2C同步（保证客户端流畅）：客户端更新玩家移动的目标点，只在到达目标
点后才会同步一次数据
4、验证通信过程：客户端保存一个投递移动封包数量，服务器验证每一步移动后会返回一
个消息，客户端收到此消息后递减投递数量；投递数量过多，客户端忽略玩家移动请求。该
方法可以限制客户端本地移动太远。

6.10.2010

客户端每走一步都会向服务器验证，服务器验证结果如果失败，客户端则停止移动。服务器
的坐标遵从客户端，服务器仅仅做验证。当客户端停止移动后，客户端的数据才会使用服务
器端的数据。整个过程中，服务器一直在使用客户端的合法数据，直到移动结束才使用服务
器端数据同步一次。

Client:
C2S: cur pos, dest pos
save dest pos, not change cur pos

Server:
check the request, make sure the cur pos between client and server is not too
different
change cur pos by cur pos from client
S2C: dest pos

Client:
decrease the request msg count

--
Client:
move to the dest pos finished
C2S: cur pos

Server:
change cur pos by cur pos from client
S2C: cur pos

Client:
if dest pos != cur pos from server, set cur pos by cur pos from server

